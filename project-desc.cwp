#noCase

properties ::=
           #continue
           [ property(this) ]+
           #empty;

property(project:node) ::=
         #readIdentifier:propName
         #continue propStatement<propName>(project) '\n';

propStatement<"name">(project:node) ::=
         ':' #continue VAL:propValue
           => {
              trim(propValue);
              insert project.name = propValue;
              traceLine("name: " + propValue);
           };

propStatement<"group">(project:node) ::=
         ':' #continue VAL:propValue
           => {
              trim(propValue);
              insert project.group = propValue;
              traceLine("group: " + propValue);
           };

propStatement<"verticles">(project:node) ::=
         ':' #continue VAL:propValue
           => {
           local verticleNames;
           cutString(propValue, ",", verticleNames);
           foreach v in verticleNames {
                   local verticleName = v;
                   trim(verticleName);
                   pushItem project.verticles;
                   project.verticles#back = verticleName;
           }
           };


VAL:value ::= #!ignore #continue [['a'..'z' | 'A'..'Z' | '.' | ',' | ' ' ]]+:VAL;
