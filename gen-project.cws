traceLine("Generate project...");

parseAsBNF("project-desc.cwp", project, "project.txt");
saveProject("tree.xml");

traceLine("Create directory " + project.name);

local projectDir = getWorkingPath() + project.name;
createDirectory(projectDir);

// Create pom.xml
generate("templates/pom.xml.cwt", project, projectDir + "/pom.xml");
createDirectory(projectDir + "/src/main/groovy/" + replaceString(".", "/", project.group));

// create .gitignore
generate("templates/gitignore.cwt", project, projectDir + "/.gitignore");

// Create the Main verticle
generate("templates/Main.groovy.cwt", project, projectDir + "/src/main/groovy/"
                            + replaceString(".", "/", project.group) + "/Main.groovy");

// Create the ApplicationVerticle verticle
generate("templates/ApplicationVerticle.groovy.cwt", project, projectDir + "/src/main/groovy/"
                            + replaceString(".", "/", project.group) + "/ApplicationVerticle.groovy");


// Create the different Verticles
foreach v in project.verticles {
        local verticle;
        insert verticle.name = v;
        insert verticle.package = project.group;
        generate("templates/Verticle.groovy.cwt", verticle, projectDir + "/src/main/groovy/"
                            + replaceString(".", "/", project.group) + "/" + v + ".groovy");
}
